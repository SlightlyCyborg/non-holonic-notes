Notes on the [[https://common-lisp.net/project/mcclim/static/documents/mcclim.pdf][McClim Manual]]

* Introduction
  
CLIM is a multilayer graphics system that is customizable at each layer.

The top layer contains:
- application frames
- panes
- gadgets

** How CLIM is Different

CLIM is not just a GUI toolkit, it is an interface manager. 
It manages everything at the software boundary between human and machine. 

Traditional GUI has an event loop and events are sent to widgets which are handled by event handlers.

Event-driven programming is seen as a virtue by GUI builders, but events are sent in a null context and therefore must be combined in the widget or by some hack.

CLIM has an event loop, but the user of the application layer uses a command loop.

The command loop does the following:
- Acquires command. (click, key, etc)
- Command is populated by arguments.
- Command is called on the arguments.
- A display routine updates the view of the application logic.
  
Instead of attaching event handlers, a CLIM app dev does the following:
- write CLIM commands that modify application data independently of how the command is evoked.
- write display routines that turn the application data into visible representations
- write completion routines (what are these??? IDK)
- attach commands to view objects and decide how the commands get evoked.

  
* User manual
** Building McCLIM
*** Examples and demos
McCLIM source comes with some demos and applications
They are available in Examples and Apps subdirectories
- clim-demo:demodemo

*** Applications
- Apps/Listener
- Apps/Inspector
- Apps/Debugger
  
** The First Application
*** Terminology
- application-frame: top level app
- panes: blocks to patition gadgets
- gadgets: the objects in the screen
  
*** How McCLIM produces output
    
    CLIM panes record the series of operations that generates a pixel based output.

**** Simple application:
     No internal data structure to keep track of application objects. 
     It simply produces output as a result of running commands.

**** Application with a static display function
     Some applications use a display function.
     A game of tic tac toe would use a display function to draw the board.

**** Applications with a dynamic display function
     This has internal data structures that has a direct mapping to output.
     Commands modify the internal structure.
     The display function is run after each command loop iteration
     
**** Applications with an incremental static display function
     This uses `updating-output` to only update output when needded.
     
**** Programmer does it all
     This way requires the programmer to keep track of all output records on the display list and to inform CLIM about modifications to it..

